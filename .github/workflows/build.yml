name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu, macos, windows ]
        build_type: [ Debug ]
        arch: [ x86_64, arm64 ]
        exclude:
          - os: ubuntu
            arch: arm64
          - os: windows
            arch: arm64

    runs-on: ${{ matrix.os }}-latest

    env:
      CMAKE_CONFIG_PROJECT: -DPICROSS_BUILD_CLI=ON -DPICROSS_BUILD_TESTS=ON -DPICROSS_BUILD_EXAMPLES=ON
      CMAKE_CONFIG_EXTRA: ${{ matrix.os == 'macos' && format('-DCMAKE_OSX_ARCHITECTURES={0}', matrix.arch) || '' }}

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ env.CMAKE_CONFIG_PROJECT }} ${{ env.CMAKE_CONFIG_EXTRA }}

    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --config ${{ matrix.build_type }}

    - if: matrix.arch == 'x86_64'
      name: Version
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --target picross_cli_version --config ${{ matrix.build_type }}

    - if: matrix.arch == 'x86_64'
      name: Test stdutils
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --target run_utests_stdutils --config ${{ matrix.build_type }}

    - if: matrix.arch == 'x86_64'
      name: Test picross
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --target run_utests_picross --config ${{ matrix.build_type }}
